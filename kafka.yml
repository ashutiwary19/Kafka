apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: crs-kafka
  namespace: default
spec:
  serviceName: kafka-cluster
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:2.6.0
          ports:
            - containerPort: 9092
              name: internal
            - containerPort: 31092
              name: external
          env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_BROKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,EXTERNAL://:31092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: >
                PLAINTEXT://crs-kafka-$(KAFKA_CFG_BROKER_ID).kafka-cluster.default.svc.cluster.local:9092,
                EXTERNAL://localhost:31092
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
      volumes:
        - name: kafka-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-cluster
  namespace: default
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - name: internal
      port: 9092
      targetPort: 9092
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-external
  namespace: default
spec:
  type: NodePort
  selector:
    app: kafka
  ports:
    - name: external
      port: 31092
      targetPort: 31092
      nodePort: 31092
